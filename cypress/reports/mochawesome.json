{
  "stats": {
    "suites": 10,
    "tests": 34,
    "passes": 17,
    "pending": 0,
    "failures": 17,
    "start": "2022-09-02T18:46:41.993Z",
    "end": "2022-09-02T18:48:57.703Z",
    "duration": 135710,
    "testsRegistered": 34,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "236ba451-95ba-452d-87ae-d08912c846f0",
      "title": "",
      "fullFile": "cypress/e2e/_requirements/00.RunAll.cy.js",
      "file": "cypress/e2e/_requirements/00.RunAll.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21f7560d-6dd1-419a-9eb7-4badf016c143",
          "title": "1 - Crie uma página inicial de login com os seguintes campos e características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A rota para esta página deve ser '/'",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: A rota para esta página deve ser '/'",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "d3cd3f7f-016b-4495-9fb8-098b7531566c",
              "parentUUID": "21f7560d-6dd1-419a-9eb7-4badf016c143",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um local para que o usuário insira seu email e senha",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Crie um local para que o usuário insira seu email e senha",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).should('exist');\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "98ffe730-7308-4bca-a301-ea5ca677bdde",
              "parentUUID": "21f7560d-6dd1-419a-9eb7-4badf016c143",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um botão com o texto 'Entrar'",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Crie um botão com o texto 'Entrar'",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/Entrar/i).should('exist');",
              "err": {},
              "uuid": "a49131c2-17c6-4121-9a9e-4a6999670fd3",
              "parentUUID": "21f7560d-6dd1-419a-9eb7-4badf016c143",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realize as seguintes verificações nos campos de email, senha e botão:",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Realize as seguintes verificações nos campos de email, senha e botão:",
              "timedOut": null,
              "duration": 3160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).type(_constants.INVALID_EMAIL_0);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_1);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_2);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_3);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.VALID_EMAIL);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.INVALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.VALID_EMAIL);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('not.be.disabled');",
              "err": {},
              "uuid": "87f4477e-26b6-4b53-8fd5-2c4b4c5d73dd",
              "parentUUID": "21f7560d-6dd1-419a-9eb7-4badf016c143",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Salve o email no estado da aplicação, com a chave email, assim que o usuário logar.",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Salve o email no estado da aplicação, com a chave email, assim que o usuário logar.",
              "timedOut": null,
              "duration": 685,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helperFunctions.logInWithValidCredentials)();\ncy.window().its('store').invoke('getState').its('user.email').should('eq', _constants.VALID_EMAIL);",
              "err": {},
              "uuid": "602c904d-9e15-4d4b-93f2-2ac22c9dcd42",
              "parentUUID": "21f7560d-6dd1-419a-9eb7-4badf016c143",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A rota deve ser mudada para '/carteira' após o clique no botão.",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: A rota deve ser mudada para '/carteira' após o clique no botão.",
              "timedOut": null,
              "duration": 653,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helperFunctions.logInWithValidCredentials)();\ncy.location('pathname').should('eq', '/carteira');",
              "err": {},
              "uuid": "ab3eeb19-2f90-45f4-9ff8-e66f340801d0",
              "parentUUID": "21f7560d-6dd1-419a-9eb7-4badf016c143",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3cd3f7f-016b-4495-9fb8-098b7531566c",
            "98ffe730-7308-4bca-a301-ea5ca677bdde",
            "a49131c2-17c6-4121-9a9e-4a6999670fd3",
            "87f4477e-26b6-4b53-8fd5-2c4b4c5d73dd",
            "602c904d-9e15-4d4b-93f2-2ac22c9dcd42",
            "ab3eeb19-2f90-45f4-9ff8-e66f340801d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4928,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05753fde-84a3-40e1-87e1-c7feecee8944",
          "title": "2 - Crie um header para a página de carteira contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Um elemento que exiba o email do usuário que fez login.",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Um elemento que exiba o email do usuário que fez login.",
              "timedOut": null,
              "duration": 729,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.EMAIL_FIELD_TEST_ID).should('contain', _constants.VALID_EMAIL);",
              "err": {},
              "uuid": "ba5bb51f-0d91-4d21-9091-2fc28986f967",
              "parentUUID": "05753fde-84a3-40e1-87e1-c7feecee8944",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um campo com a despesa total gerada pela lista de gastos.",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Crie um campo com a despesa total gerada pela lista de gastos.",
              "timedOut": null,
              "duration": 672,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('contain', '0');",
              "err": {},
              "uuid": "74d2e1d1-144d-4f7d-9707-d4bfdc7146fd",
              "parentUUID": "05753fde-84a3-40e1-87e1-c7feecee8944",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um campo que mostre que qual câmbio está sendo utilizado, que será neste caso 'BRL'",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Crie um campo que mostre que qual câmbio está sendo utilizado, que será neste caso 'BRL'",
              "timedOut": null,
              "duration": 692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.HEADER_CURRENCY_FIELD_TEST_ID).should('contain', 'BRL');",
              "err": {},
              "uuid": "2bce0359-c7dc-4720-9c92-168d8f792c06",
              "parentUUID": "05753fde-84a3-40e1-87e1-c7feecee8944",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba5bb51f-0d91-4d21-9091-2fc28986f967",
            "74d2e1d1-144d-4f7d-9707-d4bfdc7146fd",
            "2bce0359-c7dc-4720-9c92-168d8f792c06"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
          "title": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Um campo para adicionar o valor da despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para adicionar o valor da despesa",
              "timedOut": null,
              "duration": 718,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "9cd91bd1-d4b9-4a17-9841-16fb447a680d",
              "parentUUID": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para adicionar a descrição da despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para adicionar a descrição da despesa",
              "timedOut": null,
              "duration": 686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "f093df5d-2d85-4e81-a0f3-336ab0758922",
              "parentUUID": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar em qual moeda será registrada a despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar em qual moeda será registrada a despesa",
              "timedOut": null,
              "duration": 827,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.CURRENCY_INPUT_TEST_ID).find('option').should('have.length', _constants.currenciesOptions.length);\ncy.wrap(_constants.currenciesOptions).each(currency => {\n  cy.getByTestId(_constants.CURRENCY_INPUT_TEST_ID).contains('option', currency).should('exist');\n});",
              "err": {},
              "uuid": "9fadf230-a0c4-4b79-86e8-ccf61e4eff9c",
              "parentUUID": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A chave currencies no estado global deve ser um array de siglas puxadas através de uma requisição à API",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: A chave currencies no estado global deve ser um array de siglas puxadas através de uma requisição à API",
              "timedOut": null,
              "duration": 658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@mockFetch').should('be.calledWith', 'https://economia.awesomeapi.com.br/json/all');\ncy.window().its('store').invoke('getState').its('wallet.currencies').should('deep.equal', _constants.currenciesOptions);",
              "err": {},
              "uuid": "c6772628-8052-46e1-95db-f66688d6346f",
              "parentUUID": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar qual método de pagamento será utilizado",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar qual método de pagamento será utilizado",
              "timedOut": null,
              "duration": 756,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.METHOD_INPUT_TEST_ID).find('option').should('have.length', _constants.methodOptions.length);\ncy.wrap(_constants.methodOptions).each(method => {\n  cy.getByTestId(_constants.METHOD_INPUT_TEST_ID).contains('option', method).should('exist');\n});",
              "err": {},
              "uuid": "6a3afd1c-9a39-4aab-b25b-7648818bf3ab",
              "parentUUID": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar uma categoria (tag) para a despesa.",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar uma categoria (tag) para a despesa.",
              "timedOut": null,
              "duration": 728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TAG_INPUT_TEST_ID).find('option').should('have.length', _constants.tagOptions.length);\ncy.wrap(_constants.tagOptions).each(tag => {\n  cy.getByTestId(_constants.TAG_INPUT_TEST_ID).contains('option', tag).should('exist');\n});",
              "err": {},
              "uuid": "cc6a50ee-d22e-4d13-bf66-7e006c63a992",
              "parentUUID": "aa963cfa-5100-40a8-8ddf-c7bc4d90afce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cd91bd1-d4b9-4a17-9841-16fb447a680d",
            "f093df5d-2d85-4e81-a0f3-336ab0758922",
            "9fadf230-a0c4-4b79-86e8-ccf61e4eff9c",
            "c6772628-8052-46e1-95db-f66688d6346f",
            "6a3afd1c-9a39-4aab-b25b-7648818bf3ab",
            "cc6a50ee-d22e-4d13-bf66-7e006c63a992"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17c34c7b-bd8d-42c1-a668-be2bd66bd859",
          "title": "4 - Salve todas as informações do formulário no estado global",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "timedOut": null,
              "duration": 1695,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '52.28');\ncy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('have.value', '');\ncy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('have.value', '');",
              "err": {},
              "uuid": "8f891fe2-20d8-4084-85a4-4d052d79616b",
              "parentUUID": "17c34c7b-bd8d-42c1-a668-be2bd66bd859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "timedOut": null,
              "duration": 11766,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [_objectSpread(_objectSpread({}, expense), {}, {\n  id: 0,\n  exchangeRates: _data.mockData\n})]);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected [ Array(1) ] to deeply equal [ Array(1) ]",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:396:72)",
                "diff": "- [ { id: 0,\n-     value: '11',\n+ [ { value: '11',\n+     currency: 'USD',\n+     method: 'Cartão de crédito',\n+     tag: 'Lazer',\n     description: 'Onze dólares',\n-     currency: 'USD',\n-     method: 'credit-card',\n-     tag: 'leisure',\n+     id: 0,\n     exchangeRates: \n      { USD: [Object],\n        USDT: [Object],\n        CAD: [Object],\n"
              },
              "uuid": "b822bab8-2d28-4e93-808a-764ac5dbf03c",
              "parentUUID": "17c34c7b-bd8d-42c1-a668-be2bd66bd859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "timedOut": null,
              "duration": 2850,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\ncy.get('@mockFetch').should('be.calledOnce');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledTwice');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledThrice');",
              "err": {},
              "uuid": "a5f688fd-c52d-4ea9-b417-b30d39e7e842",
              "parentUUID": "17c34c7b-bd8d-42c1-a668-be2bd66bd859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "timedOut": null,
              "duration": 11804,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const firstExpense = {\n  id: 0,\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(firstExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense]);\nconst secondExpense = {\n  id: 1,\n  value: '20',\n  currency: 'EUR',\n  method: 'Cartão de débito',\n  tag: 'Trabalho',\n  description: 'Vinte euros',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(secondExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense, secondExpense]);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '154.82');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected [ Array(1) ] to deeply equal [ Array(1) ]",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:426:72)",
                "diff": " [ { id: 0,\n     value: '11',\n+     currency: 'USD',\n+     method: 'Cartão de crédito',\n+     tag: 'Lazer',\n     description: 'Onze dólares',\n-     currency: 'USD',\n-     method: 'credit-card',\n-     tag: 'leisure',\n     exchangeRates: \n      { USD: [Object],\n        USDT: [Object],\n        CAD: [Object],\n"
              },
              "uuid": "eb2ea757-decf-4baf-8510-020cdbb8d43d",
              "parentUUID": "17c34c7b-bd8d-42c1-a668-be2bd66bd859",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f891fe2-20d8-4084-85a4-4d052d79616b",
            "a5f688fd-c52d-4ea9-b417-b30d39e7e842"
          ],
          "failures": [
            "b822bab8-2d28-4e93-808a-764ac5dbf03c",
            "eb2ea757-decf-4baf-8510-020cdbb8d43d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "43c0f29e-5b40-4327-9a50-7f7ace9b3e42",
          "title": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cobertura de \"Statements\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Statements\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.statements.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:458:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Socket.<anonymous> (node:internal/child_process:451:11)\n      at Socket.emit (node:events:527:28)\n      at Socket.emit (node:domain:475:12)\n      at Pipe.<anonymous> (node:net:709:12)",
                "diff": null
              },
              "uuid": "06518adf-2778-4032-8936-e2c6cc2cf5db",
              "parentUUID": "43c0f29e-5b40-4327-9a50-7f7ace9b3e42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Functions\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Functions\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 761,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.functions.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:463:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "59572aed-56b2-4518-8ff0-c77fecdbce5e",
              "parentUUID": "43c0f29e-5b40-4327-9a50-7f7ace9b3e42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Branches\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Branches\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 790,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.branches.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:468:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "32250164-b14b-4b12-b4fc-afc29541ff8c",
              "parentUUID": "43c0f29e-5b40-4327-9a50-7f7ace9b3e42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Lines\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Lines\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 807,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.lines.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:473:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "35599bd2-c1ed-4536-96d5-294e759eda4a",
              "parentUUID": "43c0f29e-5b40-4327-9a50-7f7ace9b3e42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "06518adf-2778-4032-8936-e2c6cc2cf5db",
            "59572aed-56b2-4518-8ff0-c77fecdbce5e",
            "32250164-b14b-4b12-b4fc-afc29541ff8c",
            "35599bd2-c1ed-4536-96d5-294e759eda4a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c5a41c19-7362-44fd-ac70-39a87c2d7ceb",
          "title": "6 - Desenvolva uma tabela com os gastos contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tabela deve possuir um cabeçalho com os campos Descrição, Tag, Método de pagamento, Valor, Moeda, Câmbio utilizado, Valor convertido e Moeda de conversão",
              "fullTitle": "6 - Desenvolva uma tabela com os gastos contendo as seguintes características: A tabela deve possuir um cabeçalho com os campos Descrição, Tag, Método de pagamento, Valor, Moeda, Câmbio utilizado, Valor convertido e Moeda de conversão",
              "timedOut": null,
              "duration": 10671,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('th').should('have.length', _constants.tableHeaderList.length);\ncy.wrap(_constants.tableHeaderList).each(header => {\n  cy.get('th').contains(header);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `th`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `th`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:511:18)",
                "diff": null
              },
              "uuid": "c361edfe-59d8-4fb7-a794-63ab72969f42",
              "parentUUID": "c5a41c19-7362-44fd-ac70-39a87c2d7ceb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c361edfe-59d8-4fb7-a794-63ab72969f42"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10671,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8905298-d33e-44fe-80a8-361bfbe020a9",
          "title": "7 - Implemente a lógica para que a tabela seja alimentada pelo estado da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tabela deve ser alimentada pelo estado da aplicação, que estará disponível na chave expenses que vem do reducer wallet.",
              "fullTitle": "7 - Implemente a lógica para que a tabela seja alimentada pelo estado da aplicação A tabela deve ser alimentada pelo estado da aplicação, que estará disponível na chave expenses que vem do reducer wallet.",
              "timedOut": null,
              "duration": 12931,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expectedTableRows = [['Dez dólares', 'Trabalho', 'Cartão de débito', '10.00', 'Dólar Americano/Real Brasileiro', '4.75', '47.53', 'Real'], ['Cinco euros', 'Lazer', 'Cartão de crédito', '5.00', 'Euro/Real Brasileiro', '5.13', '25.63', 'Real']];\ncy.get('tbody tr').should('have.length', expectedTableRows.length);\ncy.get('tbody tr').each((row, index) => {\n  cy.wrap(expectedTableRows[index]).each(expectedValue => {\n    cy.get(row).find('td').contains(expectedValue);\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:552:24)",
                "diff": null
              },
              "uuid": "31bd30ba-0bfb-43a6-86e5-9aa8a8fb9916",
              "parentUUID": "b8905298-d33e-44fe-80a8-361bfbe020a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "31bd30ba-0bfb-43a6-86e5-9aa8a8fb9916"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12931,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d54d6cbe-9061-4332-b90a-f4bb1047b6f8",
          "title": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"delete-btn\"`",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"delete-btn\"`",
              "timedOut": null,
              "duration": 12848,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_DELETE_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).should('have.length', 2);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:601:8)",
                "diff": null
              },
              "uuid": "272d8e2d-b56a-4a1d-b040-f613f5c30f59",
              "parentUUID": "d54d6cbe-9061-4332-b90a-f4bb1047b6f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao ser clicado, o botão deleta a linha da tabela, alterando o estado global.",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: Ao ser clicado, o botão deleta a linha da tabela, alterando o estado global.",
              "timedOut": null,
              "duration": 12802,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expectedTableRow = ['Cinco euros', 'Lazer', 'Cartão de crédito', '5.00', 'Euro/Real Brasileiro', '5.13', '25.63', 'Real'];\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click().should('not.exist');\nconst deleteBtn = 1;\ncy.get('tbody tr td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr td').contains(expectedValue);\n});\nconst expectedExpenses = [_objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"delete-btn\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"delete-btn\"]`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/support/e2e.js:124:63)",
                "diff": null
              },
              "uuid": "64799710-102e-4578-8a0a-f7d3bf08bde4",
              "parentUUID": "d54d6cbe-9061-4332-b90a-f4bb1047b6f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao clicar no botão para remover uma despesa, o valor correspondente deve ser subtraído e a despesa total deve ser atualizada no header",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: Ao clicar no botão para remover uma despesa, o valor correspondente deve ser subtraído e a despesa total deve ser atualizada no header",
              "timedOut": null,
              "duration": 12854,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '73.16');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click();\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '25.63');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click();\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '0.00');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected '<h4.total-box>' to have text '73.16', but the text was '47.53'",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected '<h4.total-box>' to have text '73.16', but the text was '47.53'\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:619:52)",
                "diff": "- '47.53'\n+ '73.16'\n"
              },
              "uuid": "d7147a22-2d1d-4a53-ac96-57dc1dec3836",
              "parentUUID": "d54d6cbe-9061-4332-b90a-f4bb1047b6f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "272d8e2d-b56a-4a1d-b040-f613f5c30f59",
            "64799710-102e-4578-8a0a-f7d3bf08bde4",
            "d7147a22-2d1d-4a53-ac96-57dc1dec3836"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38504,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b6a0c9c-8cb4-4315-bb03-1f66e8e3302a",
          "title": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "timedOut": null,
              "duration": 12700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_EDIT_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_EDIT_TEST_ID).should('have.length', 2);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:667:8)",
                "diff": null
              },
              "uuid": "8a55f864-edf8-40cb-a291-02d13203dec0",
              "parentUUID": "7b6a0c9c-8cb4-4315-bb03-1f66e8e3302a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "timedOut": null,
              "duration": 13022,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.BTN_EDIT_TEST_ID).first().click();\ncy.contains(/Adicionar despesa/i).should('not.exist');\ncy.contains(/Editar despesa/i).should('exist');\n(0, _helperFunctions.editExpense)({\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses'\n});\nconst expectedTableRow = ['Duzentos dólares canadenses', 'Saúde', 'Dinheiro', '200.00', 'Dólar Canadense/Real Brasileiro', '3.76', '751.18', 'Real'];\nconst deleteBtn = 1;\ncy.get('tbody tr').first().find('td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr').first().find('td').contains(expectedValue);\n});\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '776.81');\nconst expectedExpenses = [{\n  id: 0,\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses',\n  exchangeRates: _data.mockData\n}, _objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"edit-btn\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"edit-btn\"]`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/support/e2e.js:124:63)",
                "diff": null
              },
              "uuid": "eb64633b-9c6f-4e19-972b-04d567f960c3",
              "parentUUID": "7b6a0c9c-8cb4-4315-bb03-1f66e8e3302a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8a55f864-edf8-40cb-a291-02d13203dec0",
            "eb64633b-9c6f-4e19-972b-04d567f960c3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a9d5e96-1e3e-4a92-b081-ee1c1c827842",
          "title": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cobertura de \"Statements\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Statements\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 979,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.statements.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:720:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "493d6706-466d-4094-8ba3-6f1c2b364763",
              "parentUUID": "9a9d5e96-1e3e-4a92-b081-ee1c1c827842",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Functions\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Functions\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 851,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.functions.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:725:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "106e722b-d9b8-4930-b534-c07c94576671",
              "parentUUID": "9a9d5e96-1e3e-4a92-b081-ee1c1c827842",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Branches\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Branches\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 888,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.branches.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:730:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "a3ddc7cf-4159-4db5-a964-7fc7d0170512",
              "parentUUID": "9a9d5e96-1e3e-4a92-b081-ee1c1c827842",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Lines\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Lines\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 885,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.lines.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n\n\nhttps://on.cypress.io/api/task\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:160502:78\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7712:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/e2e/_requirements/00.RunAll.cy.js:735:8)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run test-coverage -- --coverageReporters=\"json-summary\" --testFailureExitCode=0\n  \n      at ChildProcess.exithandler (node:child_process:398:12)\n      at ChildProcess.emit (node:events:527:28)\n      at ChildProcess.emit (node:domain:475:12)\n      at maybeClose (node:internal/child_process:1092:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "31fc4ec9-6297-44b0-a98a-c3383632dbf0",
              "parentUUID": "9a9d5e96-1e3e-4a92-b081-ee1c1c827842",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "493d6706-466d-4094-8ba3-6f1c2b364763",
            "106e722b-d9b8-4930-b534-c07c94576671",
            "a3ddc7cf-4159-4db5-a964-7fc7d0170512",
            "31fc4ec9-6297-44b0-a98a-c3383632dbf0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3603,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}