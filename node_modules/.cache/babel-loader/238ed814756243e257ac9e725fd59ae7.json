{"ast":null,"code":"import { REQUEST_CURRENCY, RECEIVE_CURRENCY, RECEIVE_CURRENCY_FAILURE, RECEIVE_EXPENSE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0,\n  currencyName: '',\n  error: ''\n};\n\nfunction wallet() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CURRENCY:\n      return { ...state,\n        ...action.payload\n      };\n\n    case RECEIVE_CURRENCY:\n      return { ...state,\n        currencies: action.currencies\n      };\n\n    case RECEIVE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses, action.expenses],\n        total: [...state.expenses, action.expenses].reduce((acc, _ref) => {\n          let {\n            value,\n            currency,\n            exchangeRates\n          } = _ref;\n          const total = acc + value * exchangeRates[currency].ask;\n          return total;\n        }, 0),\n        currencyName: [...state.expenses, action.expenses][exchangeRates][currency].name\n      };\n\n    case RECEIVE_CURRENCY_FAILURE:\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default wallet;","map":{"version":3,"names":["REQUEST_CURRENCY","RECEIVE_CURRENCY","RECEIVE_CURRENCY_FAILURE","RECEIVE_EXPENSE","INITIAL_STATE","currencies","expenses","total","currencyName","error","wallet","state","action","type","payload","reduce","acc","value","currency","exchangeRates","ask","name"],"sources":["/home/almir/Documentos/Projects/15.6_trybewallet/sd-023-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { REQUEST_CURRENCY,\n  RECEIVE_CURRENCY,\n  RECEIVE_CURRENCY_FAILURE,\n  RECEIVE_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0,\n  currencyName: '',\n  error: '',\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCY: return { ...state, ...action.payload };\n  case RECEIVE_CURRENCY: return { ...state, currencies: action.currencies };\n  case RECEIVE_EXPENSE: return {\n    ...state,\n    expenses: [...state.expenses, action.expenses],\n    total: [...state.expenses, action.expenses]\n      .reduce(\n        (acc, { value, currency, exchangeRates }) => {\n          const total = acc + value * exchangeRates[currency].ask;\n          return total;\n        },\n        0,\n      ),\n    currencyName: [...state.expenses, action.expenses][exchangeRates][currency].name,\n  };\n  case RECEIVE_CURRENCY_FAILURE: return { ...state, error: action.error };\n  default: return state;\n  }\n}\n\nexport default wallet;\n"],"mappings":"AAAA,SAASA,gBAAT,EACEC,gBADF,EAEEC,wBAFF,EAGEC,eAHF,QAIO,YAJP;AAMA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,KAAK,EAAE,CAHa;EAIpBC,YAAY,EAAE,EAJM;EAKpBC,KAAK,EAAE;AALa,CAAtB;;AAQA,SAASC,MAAT,GAA+C;EAAA,IAA/BC,KAA+B,uEAAvBP,aAAuB;EAAA,IAARQ,MAAQ;;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKb,gBAAL;MAAuB,OAAO,EAAE,GAAGW,KAAL;QAAY,GAAGC,MAAM,CAACE;MAAtB,CAAP;;IACvB,KAAKb,gBAAL;MAAuB,OAAO,EAAE,GAAGU,KAAL;QAAYN,UAAU,EAAEO,MAAM,CAACP;MAA/B,CAAP;;IACvB,KAAKF,eAAL;MAAsB,OAAO,EAC3B,GAAGQ,KADwB;QAE3BL,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoBM,MAAM,CAACN,QAA3B,CAFiB;QAG3BC,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACL,QAAV,EAAoBM,MAAM,CAACN,QAA3B,EACJS,MADI,CAEH,CAACC,GAAD,WAA6C;UAAA,IAAvC;YAAEC,KAAF;YAASC,QAAT;YAAmBC;UAAnB,CAAuC;UAC3C,MAAMZ,KAAK,GAAGS,GAAG,GAAGC,KAAK,GAAGE,aAAa,CAACD,QAAD,CAAb,CAAwBE,GAApD;UACA,OAAOb,KAAP;QACD,CALE,EAMH,CANG,CAHoB;QAW3BC,YAAY,EAAE,CAAC,GAAGG,KAAK,CAACL,QAAV,EAAoBM,MAAM,CAACN,QAA3B,EAAqCa,aAArC,EAAoDD,QAApD,EAA8DG;MAXjD,CAAP;;IAatB,KAAKnB,wBAAL;MAA+B,OAAO,EAAE,GAAGS,KAAL;QAAYF,KAAK,EAAEG,MAAM,CAACH;MAA1B,CAAP;;IAC/B;MAAS,OAAOE,KAAP;EAjBT;AAmBD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}