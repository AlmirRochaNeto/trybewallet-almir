{"ast":null,"code":"import getCurrenciesFromApi from '../../helpers/currenciesAPI';\nexport const ADD_LOGIN_INFO = 'ADD_LOGIN_INFO';\nexport const REQUEST_CURRENCY = 'REQUEST_CURRENCY';\nexport const RECEIVE_CURRENCY = 'RECEIVE_CURRENCY';\nexport const RECEIVE_CURRENCY_FAILURE = 'RECEIVE_CURRENCY_FAILURE';\n\nconst requestCurrency = () => ({\n  type: REQUEST_CURRENCY\n});\n\nconst receiveCurrency = currencies => ({\n  type: RECEIVE_CURRENCY,\n  currencies: Object.keys(currencies).toString()\n});\n\nconst receiveCurrencyFailure = errorMessage => ({\n  type: RECEIVE_CURRENCY_FAILURE,\n  error: errorMessage\n});\n\nexport const fetchCurrencies = () => async dispacth => {\n  dispacth(requestCurrency());\n\n  try {\n    const response = await getCurrenciesFromApi();\n    const sucessAction = receiveCurrency(response);\n    dispacth(sucessAction);\n  } catch (error) {\n    const failureAction = receiveCurrencyFailure(error);\n    dispacth(failureAction);\n  }\n};\nexport function login(payload) {\n  return {\n    type: ADD_LOGIN_INFO,\n    payload\n  };\n}","map":{"version":3,"names":["getCurrenciesFromApi","ADD_LOGIN_INFO","REQUEST_CURRENCY","RECEIVE_CURRENCY","RECEIVE_CURRENCY_FAILURE","requestCurrency","type","receiveCurrency","currencies","Object","keys","toString","receiveCurrencyFailure","errorMessage","error","fetchCurrencies","dispacth","response","sucessAction","failureAction","login","payload"],"sources":["/home/almir/Documentos/Projects/15.6_trybewallet/sd-023-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import getCurrenciesFromApi from '../../helpers/currenciesAPI';\n\nexport const ADD_LOGIN_INFO = 'ADD_LOGIN_INFO';\nexport const REQUEST_CURRENCY = 'REQUEST_CURRENCY';\nexport const RECEIVE_CURRENCY = 'RECEIVE_CURRENCY';\nexport const RECEIVE_CURRENCY_FAILURE = 'RECEIVE_CURRENCY_FAILURE';\n\nconst requestCurrency = () => ({\n  type: REQUEST_CURRENCY,\n});\n\nconst receiveCurrency = (currencies) => ({\n  type: RECEIVE_CURRENCY,\n  currencies: Object.keys(currencies).toString(),\n});\n\nconst receiveCurrencyFailure = (errorMessage) => ({\n  type: RECEIVE_CURRENCY_FAILURE,\n  error: errorMessage,\n});\n\nexport const fetchCurrencies = () => async (dispacth) => {\n  dispacth(requestCurrency());\n  try {\n    const response = await getCurrenciesFromApi();\n    const sucessAction = receiveCurrency(response);\n    dispacth(sucessAction);\n  } catch (error) {\n    const failureAction = receiveCurrencyFailure(error);\n    dispacth(failureAction);\n  }\n};\n\nexport function login(payload) {\n  return {\n    type: ADD_LOGIN_INFO,\n    payload,\n  };\n}\n"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,6BAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;;AAEP,MAAMC,eAAe,GAAG,OAAO;EAC7BC,IAAI,EAAEJ;AADuB,CAAP,CAAxB;;AAIA,MAAMK,eAAe,GAAIC,UAAD,KAAiB;EACvCF,IAAI,EAAEH,gBADiC;EAEvCK,UAAU,EAAEC,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,QAAxB;AAF2B,CAAjB,CAAxB;;AAKA,MAAMC,sBAAsB,GAAIC,YAAD,KAAmB;EAChDP,IAAI,EAAEF,wBAD0C;EAEhDU,KAAK,EAAED;AAFyC,CAAnB,CAA/B;;AAKA,OAAO,MAAME,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACvDA,QAAQ,CAACX,eAAe,EAAhB,CAAR;;EACA,IAAI;IACF,MAAMY,QAAQ,GAAG,MAAMjB,oBAAoB,EAA3C;IACA,MAAMkB,YAAY,GAAGX,eAAe,CAACU,QAAD,CAApC;IACAD,QAAQ,CAACE,YAAD,CAAR;EACD,CAJD,CAIE,OAAOJ,KAAP,EAAc;IACd,MAAMK,aAAa,GAAGP,sBAAsB,CAACE,KAAD,CAA5C;IACAE,QAAQ,CAACG,aAAD,CAAR;EACD;AACF,CAVM;AAYP,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwB;EAC7B,OAAO;IACLf,IAAI,EAAEL,cADD;IAELoB;EAFK,CAAP;AAID"},"metadata":{},"sourceType":"module"}