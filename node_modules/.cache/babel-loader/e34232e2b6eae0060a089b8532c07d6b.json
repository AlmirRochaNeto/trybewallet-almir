{"ast":null,"code":"import { REQUEST_CURRENCY, RECEIVE_CURRENCY, RECEIVE_CURRENCY_FAILURE, RECEIVE_EXPENSE, DELETE_EXPENSE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0,\n  error: ''\n};\n\nfunction wallet() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CURRENCY:\n      return { ...state,\n        ...action.payload\n      };\n\n    case RECEIVE_CURRENCY:\n      return { ...state,\n        currencies: action.currencies\n      };\n\n    case RECEIVE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses, action.expenses],\n        total: [...state.expenses, action.expenses].reduce((acc, _ref) => {\n          let {\n            value,\n            currency,\n            exchangeRates\n          } = _ref;\n          const total = acc + value * exchangeRates[currency].ask;\n          return total;\n        }, 0)\n      };\n\n    case RECEIVE_CURRENCY_FAILURE:\n      return { ...state,\n        error: action.error\n      };\n\n    case DELETE_EXPENSE:\n      return { ...state,\n        expenses: action.expenses\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default wallet;","map":{"version":3,"names":["REQUEST_CURRENCY","RECEIVE_CURRENCY","RECEIVE_CURRENCY_FAILURE","RECEIVE_EXPENSE","DELETE_EXPENSE","INITIAL_STATE","currencies","expenses","total","error","wallet","state","action","type","payload","reduce","acc","value","currency","exchangeRates","ask"],"sources":["/home/almir/Documentos/Projects/15.6_trybewallet/sd-023-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { REQUEST_CURRENCY,\n  RECEIVE_CURRENCY,\n  RECEIVE_CURRENCY_FAILURE,\n  RECEIVE_EXPENSE,\n  DELETE_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  total: 0,\n  error: '',\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCY: return { ...state, ...action.payload };\n  case RECEIVE_CURRENCY: return { ...state, currencies: action.currencies };\n  case RECEIVE_EXPENSE: return {\n    ...state,\n    expenses: [...state.expenses, action.expenses],\n    total: [...state.expenses, action.expenses]\n      .reduce(\n        (acc, { value, currency, exchangeRates }) => {\n          const total = acc + value * exchangeRates[currency].ask;\n          return total;\n        },\n        0,\n      ),\n  };\n  case RECEIVE_CURRENCY_FAILURE: return { ...state, error: action.error };\n  case DELETE_EXPENSE: return { ...state, expenses: action.expenses,\n  };\n  default: return state;\n  }\n}\n\nexport default wallet;\n"],"mappings":"AAAA,SAASA,gBAAT,EACEC,gBADF,EAEEC,wBAFF,EAGEC,eAHF,EAIEC,cAJF,QAKO,YALP;AAOA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,KAAK,EAAE,CAHa;EAIpBC,KAAK,EAAE;AAJa,CAAtB;;AAOA,SAASC,MAAT,GAA+C;EAAA,IAA/BC,KAA+B,uEAAvBN,aAAuB;EAAA,IAARO,MAAQ;;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKb,gBAAL;MAAuB,OAAO,EAAE,GAAGW,KAAL;QAAY,GAAGC,MAAM,CAACE;MAAtB,CAAP;;IACvB,KAAKb,gBAAL;MAAuB,OAAO,EAAE,GAAGU,KAAL;QAAYL,UAAU,EAAEM,MAAM,CAACN;MAA/B,CAAP;;IACvB,KAAKH,eAAL;MAAsB,OAAO,EAC3B,GAAGQ,KADwB;QAE3BJ,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBK,MAAM,CAACL,QAA3B,CAFiB;QAG3BC,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACJ,QAAV,EAAoBK,MAAM,CAACL,QAA3B,EACJQ,MADI,CAEH,CAACC,GAAD,WAA6C;UAAA,IAAvC;YAAEC,KAAF;YAASC,QAAT;YAAmBC;UAAnB,CAAuC;UAC3C,MAAMX,KAAK,GAAGQ,GAAG,GAAGC,KAAK,GAAGE,aAAa,CAACD,QAAD,CAAb,CAAwBE,GAApD;UACA,OAAOZ,KAAP;QACD,CALE,EAMH,CANG;MAHoB,CAAP;;IAYtB,KAAKN,wBAAL;MAA+B,OAAO,EAAE,GAAGS,KAAL;QAAYF,KAAK,EAAEG,MAAM,CAACH;MAA1B,CAAP;;IAC/B,KAAKL,cAAL;MAAqB,OAAO,EAAE,GAAGO,KAAL;QAAYJ,QAAQ,EAAEK,MAAM,CAACL;MAA7B,CAAP;;IAErB;MAAS,OAAOI,KAAP;EAlBT;AAoBD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}