{"ast":null,"code":"var _jsxFileName = \"/home/almir/Documentos/Projects/15.6_trybewallet/sd-023-a-project-trybewallet/src/components/Table.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport '../style/components/Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  render() {\n    const {\n      expenses\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"M\\xE9todo de pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"C\\xE2mbio utilizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor convertido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Moeda de convers\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Editar/Excluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.currencyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Number(expense.exchangeValue).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Number(expense.convertedValue).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nTable.propTypes = {\n  expenses: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n    value: propTypes.string.isRequired,\n    description: propTypes.string.isRequired,\n    currency: propTypes.string.isRequired,\n    method: propTypes.string.isRequired,\n    tag: propTypes.string.isRequired,\n    exchangeRates: propTypes.objectOf(propTypes.objectOf)\n  })).isRequired\n};\nexport default connect(mapStateToProps)(Table);","map":{"version":3,"names":["React","Component","connect","propTypes","Table","render","expenses","props","map","expense","index","description","tag","method","value","currencyName","Number","exchangeValue","toFixed","convertedValue","mapStateToProps","state","wallet","arrayOf","shape","id","number","isRequired","string","currency","exchangeRates","objectOf"],"sources":["/home/almir/Documentos/Projects/15.6_trybewallet/sd-023-a-project-trybewallet/src/components/Table.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport '../style/components/Table.css';\n\nclass Table extends Component {\n  render() {\n    const { expenses } = this.props;\n    return (\n      <main>\n        <table>\n          <tbody>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n            {expenses.map((expense, index) => (\n              <tr key={ index }>\n                <td>{ expense.description }</td>\n                <td>{ expense.tag }</td>\n                <td>{ expense.method }</td>\n                <td>{ expense.value }</td>\n                <td>{ expense.currencyName }</td>\n                <td>{ Number(expense.exchangeValue).toFixed(2) }</td>\n                <td>{ Number(expense.convertedValue).toFixed(2) }</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nTable.propTypes = {\n  expenses: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n    value: propTypes.string.isRequired,\n    description: propTypes.string.isRequired,\n    currency: propTypes.string.isRequired,\n    method: propTypes.string.isRequired,\n    tag: propTypes.string.isRequired,\n    exchangeRates: propTypes.objectOf(propTypes.objectOf),\n  })).isRequired,\n};\n\nexport default connect(mapStateToProps)(Table);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,+BAAP;;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;EAC5BI,MAAM,GAAG;IACP,MAAM;MAAEC;IAAF,IAAe,KAAKC,KAA1B;IACA,oBACE;MAAA,uBACE;QAAA,uBACE;UAAA,wBACE;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF,eAME;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QANF,eAOE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAPF,eAQE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QARF,eASE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QATF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAYGD,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACZ;YAAA,wBACE;cAAA,UAAMD,OAAO,CAACE;YAAd;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,UAAMF,OAAO,CAACG;YAAd;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA,UAAMH,OAAO,CAACI;YAAd;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE;cAAA,UAAMJ,OAAO,CAACK;YAAd;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAA,UAAML,OAAO,CAACM;YAAd;cAAA;cAAA;cAAA;YAAA,QALF,eAME;cAAA,UAAMC,MAAM,CAACP,OAAO,CAACQ,aAAT,CAAN,CAA8BC,OAA9B,CAAsC,CAAtC;YAAN;cAAA;cAAA;cAAA;YAAA,QANF,eAOE;cAAA,UAAMF,MAAM,CAACP,OAAO,CAACU,cAAT,CAAN,CAA+BD,OAA/B,CAAuC,CAAvC;YAAN;cAAA;cAAA;cAAA;YAAA,QAPF;UAAA,GAAUR,KAAV;YAAA;YAAA;YAAA;UAAA,QADD,CAZH;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA+BD;;AAlC2B;;AAqC9B,MAAMU,eAAe,GAAIC,KAAD,KAAY;EAClCf,QAAQ,EAAEe,KAAK,CAACC,MAAN,CAAahB;AADW,CAAZ,CAAxB;;AAIAF,KAAK,CAACD,SAAN,GAAkB;EAChBG,QAAQ,EAAEH,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,KAAV,CAAgB;IAC1CC,EAAE,EAAEtB,SAAS,CAACuB,MAAV,CAAiBC,UADqB;IAE1Cb,KAAK,EAAEX,SAAS,CAACyB,MAAV,CAAiBD,UAFkB;IAG1ChB,WAAW,EAAER,SAAS,CAACyB,MAAV,CAAiBD,UAHY;IAI1CE,QAAQ,EAAE1B,SAAS,CAACyB,MAAV,CAAiBD,UAJe;IAK1Cd,MAAM,EAAEV,SAAS,CAACyB,MAAV,CAAiBD,UALiB;IAM1Cf,GAAG,EAAET,SAAS,CAACyB,MAAV,CAAiBD,UANoB;IAO1CG,aAAa,EAAE3B,SAAS,CAAC4B,QAAV,CAAmB5B,SAAS,CAAC4B,QAA7B;EAP2B,CAAhB,CAAlB,EAQNJ;AATY,CAAlB;AAYA,eAAezB,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,KAAzB,CAAf"},"metadata":{},"sourceType":"module"}